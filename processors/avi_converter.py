"""
AVI ‚Üí MKV Converter
–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç .avi —Ñ–∞–π–ª—ã –≤ .mkv –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å–ø–æ–ª—å–∑—É—è ffmpeg (remux –±–µ–∑ –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è)
"""

import subprocess
from pathlib import Path
from typing import Optional


class AVIConverter:
    """–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä AVI —Ñ–∞–π–ª–æ–≤ –≤ MKV"""

    def __init__(self):
        self.ffmpeg_path = 'ffmpeg'

    def needs_conversion(self, file_path: Path) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–∞ –ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–∞

        Args:
            file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É

        Returns:
            True –µ—Å–ª–∏ —Ñ–∞–π–ª .avi, –∏–Ω–∞—á–µ False
        """
        return file_path.suffix.lower() == '.avi'

    def convert(self, avi_file: Path, output_file: Optional[Path] = None) -> Optional[Path]:
        """
        –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç AVI –≤ MKV (remux –±–µ–∑ –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è)

        Args:
            avi_file: –ü—É—Ç—å –∫ .avi —Ñ–∞–π–ª—É
            output_file: –ü—É—Ç—å –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ None, —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ä—è–¥–æ–º —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º)

        Returns:
            Path –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É MKV —Ñ–∞–π–ª—É –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        if not self.needs_conversion(avi_file):
            print(f"‚ö†Ô∏è  {avi_file.name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è AVI —Ñ–∞–π–ª–æ–º")
            return None

        if output_file is None:
            output_file = avi_file.with_suffix('.mkv')

        print(f"\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è AVI ‚Üí MKV: {avi_file.name}")
        print(f"   ‚Üí {output_file.name}")

        try:
            # ffmpeg -i input.avi -c copy output.mkv
            # -c copy = –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤ –±–µ–∑ –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è (–±—ã—Å—Ç—Ä–æ)
            cmd = [
                self.ffmpeg_path,
                '-i', str(avi_file),
                '-c', 'copy',  # Copy all streams without re-encoding
                '-y',  # Overwrite output file if exists
                str(output_file)
            ]

            result = subprocess.run(
                cmd,
                check=True,
                capture_output=True,
                text=True,
                encoding='utf-8'
            )

            print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {output_file.name}")
            return output_file

        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ ffmpeg –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ {avi_file.name}")
            print(f"   {e.stderr}")
            return None
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return None
